% 生成系数


% m = 0.001;      % 区间左端点
% c = 1;    % 目标中心值
tol = 1e-10; % 收敛容差
max_iter = 100; % 最大迭代次数
tic;

% [delta, A, W, x_points] = funRemezEquirippleRational_linefreq(N, m, n, c, tol, max_iter);

AT0 = [];
WT0 = [];
deltaT0 = [];
ASetT = [];
WSetT = [];
% Freq = logspace(log10(0.0001),log10(0.01), 10);
Freq = logspace(log10(0.02),log10(0.5), 5);
C0 = 5:0.005:7;
N0 = 5;
pp = 1000;
mC = length(C0);
mFreq = length(Freq);
for ii=1:length(N0)
    N = N0(ii);
    for kk=1:mFreq
        m = Freq(kk); 
        n = 0.9;      % 区间右端点
        for ll=1:mC
            c = C0(ll);
            if ll<6
                [delta0, A0, W0, x_points0] = funRemezEquirippleRational_linefreq(N, m, n, c, tol, max_iter);
                deltaT0(ll,kk,ii) = delta0;
                AT0{ll,kk,ii}     = A0;
                WT0{ll,kk,ii}     = W0;
            else
                t = repmat([1; 2; 3; 4],1,5);
                y = [WT0{ll-4,kk,ii};WT0{ll-3,kk,ii};WT0{ll-2,kk,ii};WT0{ll-1,kk,ii}];
                for k2=1:5
                    p = polyfit(t(:,k2), y(:,k2), 1); % 二次拟合
                    next_y(k2) = polyval(p, 5); % 预测 t=4 的值
                end
                W_set = next_y;%2.*WT0{ll-1,kk,ii}-WT0{ll-2,kk,ii};
                y = [AT0{ll-4,kk,ii};AT0{ll-3,kk,ii};AT0{ll-2,kk,ii};AT0{ll-1,kk,ii}];
                for k2=1:5
                    p = polyfit(t(:,k2)', y(:,k2)', 1); % 二次拟合
                    next_y(k2) = polyval(p, 5); % 预测 t=4 的值
                end
                A_set = next_y;%2.*AT0{ll-1,kk,ii}-AT0{ll-2,kk,ii};
                delta_set = deltaT0(ll-1,kk,ii);
                x_point = x_points0;
                for mmmm=1:10
                    [delta, A, W, x_points, Err] = funRemezEquirippleRational_linefreq(N, m, n, c, tol, max_iter, A_set, W_set,delta_set, x_point, 3);
                    if ~Err
                        break;
                    else
                        deviation = 0.01; % 1% 的偏差
                        random_factor = 1 + deviation * (2 * rand(size(W_set)) - 1); % 生成 [0.99, 1.01] 的随机因子
                        W_set = W_set .* random_factor;
                        A_set = A_set .* random_factor;
%                         A_set = randi(c*2,1,5);
                        if min(W_set)<0 || max(W_set)>2*n
                            W_set = logspace(log10(m), log10(n), N);
                        end
                    end
                end
                AT0{ll,kk,ii} = A;
                WT0{ll,kk,ii} = W;
                deltaT0(ll,kk,ii) = delta;
            end
        end
    end
end
semilogx(WT0{1,1,1},AT0{1,1,1}, '*');grid on;
x1 = [];
y1 = [];
x1(1) = WT0{1,1}(1);
y1(1) = AT0{1,1}(1);
hold on;
% WT4 = WT0;
% AT4 = AT0;
for ll=1:length(C0)
    for kk=1:length(Freq)
        for ii=length(N0)
            if max(AT0{ll,kk,ii})>20
                continue;
            end
            semilogx(WT0{ll,kk,ii},AT0{ll,kk,ii}, '*');grid on;
        %     x1(ii) = WT0{ll,kk,ii}(1);
        %     y1(ii) = AT0{ll,kk,ii}(1);
        %     semilogx(WSetT{ii},ASetT{ii}, '-o');grid on;
        end
    end
end
% x1_log = log(x1);
% m = 1:N;
hold off
toc;

% WT_hist = WT0;
% AT0_hist = AT0;
% deltaT0 = deltaT0;
save('AT0','AT0');
save('WT0','WT0');
[a, b] = size(AT0);
WT1 = [];
AT1 = [];
Index = 1:105;

for ii=1:length(Index)
    WT1(ii) = WT0{ii}(end);
    AT1(ii) = AT0{ii}(end);
    plot(WT0{ii},AT0{ii}, '*');
    grid on;
    hold on;
end
hold off;